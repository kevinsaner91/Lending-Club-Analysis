ggplot(df_loan_sample.loan.sub_grade,
aes(x=reorder(sub_grade, pct),
y=pct, colour=sub_grade, fill=sub_grade)) +
geom_bar(stat="identity",
aes(color = I('black')),
size = 0.1) + coord_flip() + theme(legend.position = "none")+ xlab("Loan status") + ylab("Percentage in the dataset in the loan status")
is.na(df_loan_sample$sub_grade)
df_loan_sample.loan.sub_grade <- ifelse(test = is.na(df_loan_sample$sub_grade), yes = "B3", no = df_loan_sample$sub_grade)
is.na(df_loan_sample$sub_grade)
df_loan_sample$sub_grade <- ifelse(test = is.na(df_loan_sample$sub_grade), yes = "B3", no = df_loan_sample$sub_grade)
is.na(df_loan_sample$sub_grade)
df_loan_sample.loan.sub_grade <- df_loan_sample %>% group_by(sub_grade) %>%
dplyr::summarise(count=n()) %>% mutate(pct=count/sum(count))
ggplot(df_loan_sample.loan.sub_grade,
aes(x=reorder(sub_grade, pct),
y=pct, colour=sub_grade, fill=sub_grade)) +
geom_bar(stat="identity",
aes(color = I('black')),
size = 0.1) + coord_flip() + theme(legend.position = "none")+ xlab("Loan status") + ylab("Percentage in the dataset in the loan status")
## CLEANUP ##
## Must not be performed - but could improve performance!
rm(list = ls())
df_loan_sample <- read.csv("regression_train_loan_sample_cleaned.csv",sep = ",", header = TRUE)
df_loan_sample$term <- as.factor(df_loan_sample$term)
df_loan_sample$emp_length <- as.factor(df_loan_sample$emp_length)
df_loan_sample$home_ownership <- as.factor(df_loan_sample$home_ownership)
df_loan_sample$verification_status <- as.factor(df_loan_sample$verification_status)
df_loan_sample$loan_status <- as.factor(df_loan_sample$loan_status)
df_loan_sample$application_type <- as.factor(df_loan_sample$application_type)
df_loan_sample$initial_list_status <- as.factor(df_loan_sample$initial_list_status)
# dates
df_loan_sample$issue_d <- parse_date(as.character(df_loan_sample$issue_d), format =  "%b-%Y")
df_loan_sample$sub_grade <- replace(df_loan_sample$sub_grade, 4, NA)
df_loan_sample$sub_grade
df_loan_sample$sub_grade <- ifelse(test = is.na(df_loan_sample$sub_grade), yes = "B3", no = df_loan_sample$sub_grade)
df_loan_sample$sub_grade
rm(list = ls())
df_loan_sample <- read.csv("regression_train_loan_sample_cleaned.csv",sep = ",", header = TRUE)
##
# converting incorrect data types to be able to work with them as factor variables
# df_loan_sample$grade <- as.factor(df_loan_sample$grade) # not in the data set after our analysis
df_loan_sample$term <- as.factor(df_loan_sample$term)
df_loan_sample$emp_length <- as.factor(df_loan_sample$emp_length)
df_loan_sample$home_ownership <- as.factor(df_loan_sample$home_ownership)
df_loan_sample$verification_status <- as.factor(df_loan_sample$verification_status)
df_loan_sample$loan_status <- as.factor(df_loan_sample$loan_status)
df_loan_sample$application_type <- as.factor(df_loan_sample$application_type)
df_loan_sample$initial_list_status <- as.factor(df_loan_sample$initial_list_status)
# dates
df_loan_sample$issue_d <- parse_date(as.character(df_loan_sample$issue_d), format =  "%b-%Y")
df_loan_sample$sub_grade <- replace(df_loan_sample$sub_grade, 4, NA)
df_loan_sample$sub_grade <- ifelse(test = is.na(df_loan_sample$sub_grade), yes = "B3")
df_loan_sample$sub_grade
df_loan_sample$sub_grade <- if(is.na(df_loan_sample$sub_grade)) "B3"
df_loan_sample$sub_grade
rm(list = ls())
df_loan_sample <- read.csv("regression_train_loan_sample_cleaned.csv",sep = ",", header = TRUE)
##
# converting incorrect data types to be able to work with them as factor variables
# df_loan_sample$grade <- as.factor(df_loan_sample$grade) # not in the data set after our analysis
df_loan_sample$term <- as.factor(df_loan_sample$term)
df_loan_sample$emp_length <- as.factor(df_loan_sample$emp_length)
df_loan_sample$home_ownership <- as.factor(df_loan_sample$home_ownership)
df_loan_sample$verification_status <- as.factor(df_loan_sample$verification_status)
df_loan_sample$loan_status <- as.factor(df_loan_sample$loan_status)
df_loan_sample$application_type <- as.factor(df_loan_sample$application_type)
df_loan_sample$initial_list_status <- as.factor(df_loan_sample$initial_list_status)
# dates
df_loan_sample$issue_d <- parse_date(as.character(df_loan_sample$issue_d), format =  "%b-%Y")
df_loan_sample$sub_grade <- replace(df_loan_sample$sub_grade, 4, NA)
df_loan_sample$sub_grade
df_loan_sample$sub_grade <- replace_na(df_loan_sample$sub_grade,replace = "B3")
df_loan_sample$sub_grade
is.na(df_loan_sample$sub_grade)
df_loan_sample.loan.sub_grade <- df_loan_sample %>% group_by(sub_grade) %>%
dplyr::summarise(count=n()) %>% mutate(pct=count/sum(count))
ggplot(df_loan_sample.loan.sub_grade,
aes(x=reorder(sub_grade, pct),
y=pct, colour=sub_grade, fill=sub_grade)) +
geom_bar(stat="identity",
aes(color = I('black')),
size = 0.1) + coord_flip() + theme(legend.position = "none")+ xlab("Loan status") + ylab("Percentage in the dataset in the loan status")
## Check again visually
missing_data <- df_loan_cleaned %>% summarise_all(funs(sum(is.na(.))/n()))
missing_data <- gather(missing_data, key = "variables", value = "percent_missing")
ggplot(missing_data,
aes(x = reorder(variables, percent_missing),
y = percent_missing)) + geom_bar(stat = "identity",
fill = "red",
aes(color = I('white')),
size = 0.1)+coord_flip() + theme_few()
######
## sample the set for further analysis on smaller data set and store this in a file as well
######
set.seed(555)
######
## sample the set for further analysis on smaller data set and store this in a file as well
######
set.seed(666)
df_loan_sample <- read.csv("regression_train_loan_sample_cleaned.csv",sep = ",", header = TRUE)
# Analyze which data can be used for prediction and which might not help enough
# selecting, counting and grouping by status in sample:
df_loan_sample.loan.distribution <- df_loan_sample %>% group_by(loan_status) %>% dplyr::summarise(count=n()) %>% mutate(pct=count/sum(count))
ggplot(df_loan_sample.loan.distribution,
aes(x=reorder(loan_status, pct),
y=pct, colour=loan_status, fill=loan_status)) +
geom_bar(stat="identity",
aes(color = I('black')),
size = 0.1) + coord_flip() + theme(legend.position = "none")+ xlab("Loan status") + ylab("Percentage in the dataset in the loan status")
# converting incorrect data types to be able to work with them as factor variables
df_loan_sample$grade <- as.factor(df_loan_sample$sub_grade) # not in the data set after our analysis
#i. Term
dataset_to_analyze %>% group_by(term) %>% dplyr::summarise(count=n()) %>% mutate(pct=count/sum(count))%>%
ggplot(aes(x= term, y = pct)) + geom_bar(stat = "identity", fill = "purple", aes(color = I('black')), size = 0.1)+xlab("Term") +
ylab("Percent")+ theme_few()
#i. Term
dataset_to_analyze %>% group_by(term) %>% dplyr::summarise(count=n()) %>% mutate(pct=count/sum(count))%>%
ggplot(aes(x= term, y = pct)) + geom_bar(stat = "identity", fill = "purple", aes(color = I('black')), size = 0.1)+xlab("Term") +
ylab("Percent")+ theme_few()
dataset_to_analyze <- df_loan_sample
# selecting, counting and grouping by status in sample:
dataset_to_analyze.loan.distribution <- dataset_to_analyze %>% group_by(loan_status) %>% dplyr::summarise(count=n()) %>% mutate(pct=count/sum(count))
ggplot(dataset_to_analyze.loan.distribution,
aes(x=reorder(loan_status, pct),
y=pct, colour=loan_status, fill=loan_status)) +
geom_bar(stat="identity",
aes(color = I('black')),
size = 0.1) + coord_flip() + theme(legend.position = "none")+ xlab("Loan status") + ylab("Percentage in the dataset in the loan status")
# in case of NA replace NA by the moste used sub_grade to avoid errors in the prediction and model creation
#is.na(dataset_to_analyze$sub_grade)
dataset_to_analyze$sub_grade <- replace_na(dataset_to_analyze$sub_grade,replace = "B3")
dataset_to_analyze.loan.sub_grade <- dataset_to_analyze %>% group_by(sub_grade) %>% dplyr::summarise(count=n()) %>% mutate(pct=count/sum(count))
ggplot(dataset_to_analyze.loan.sub_grade,
aes(x=reorder(sub_grade, pct),
y=pct, colour=sub_grade, fill=sub_grade)) +
geom_bar(stat="identity",
aes(color = I('black')),
size = 0.1) + coord_flip() + theme(legend.position = "none")+ xlab("Loan status") + ylab("Percentage in the dataset in the loan status")
options(repr.plot.width=5, repr.plot.height=3)
#i. Term
dataset_to_analyze %>% group_by(term) %>% dplyr::summarise(count=n()) %>% mutate(pct=count/sum(count))%>%
ggplot(aes(x= term, y = pct)) + geom_bar(stat = "identity", fill = "purple", aes(color = I('black')), size = 0.1)+xlab("Term") +
ylab("Percent")+ theme_few()
#ii. Grade
dataset_to_analyze %>% group_by(sub_grade) %>% dplyr::summarise(count=n()) %>% mutate(pct=count/sum(count))%>%
ggplot(aes(x = reorder(sub_grade,-pct), y = pct)) + geom_bar(stat = "identity", fill = "purple", aes(color = I('black')), size = 0.1) +
xlab("Grade") + ylab("Percent")+ theme_few()
#i. Term
dataset_to_analyze %>% group_by(term) %>% dplyr::summarise(count=n()) %>% mutate(pct=count/sum(count))%>%
ggplot(aes(x= term, y = pct)) + geom_bar(stat = "identity", fill = "purple", aes(color = I('black')), size = 0.1)+xlab("Term") +
ylab("Percent")+ theme_few()
ggplot(dataset_to_analyze.loan.distribution,
aes(x=reorder(loan_status, pct),
y=pct, colour=loan_status, fill=loan_status)) +
geom_bar(stat="identity",
aes(color = I('black')),
size = 0.1) + coord_flip() + theme(legend.position = "none")+ xlab("Loan status") + ylab("Percentage in the dataset in the loan status")
#iii. Employment Length
dataset_to_analyze %>% group_by(emp_length) %>% dplyr::summarise(count=n()) %>% mutate(pct=count/sum(count))%>%
ggplot(aes(x = reorder(emp_length, pct), y = pct)) + geom_bar(stat = "identity", fill = "purple", aes(color = I('black')), size = 0.1) +
xlab("Length of employment") + ylab("Percent")+coord_flip()+ theme_few()
# Further insights in loan status in relation to the loan amount
options(repr.plot.width=6, repr.plot.height=4)
ggplot(dataset_to_analyze, aes(x= loan_amnt)) + geom_density(aes(fill = as.factor(loan_status)))+
xlab("Loan_amount")+theme_few()
# Further insights in loan status in relation to the sub_grade
ggplot(dataset_to_analyze, aes(x = sub_grade, fill = loan_status)) + geom_bar(stat='count', position='fill', aes(color = I('black')), size = 0.1) +
labs(x = 'Sub Grade') + scale_fill_discrete(name="Loan_Status") +theme_few()
ggplot(dataset_to_analyze, aes(x = sub_grade, fill = loan_status)) + geom_bar(stat='count', position='fill', aes(color = I('black')), size = 0.1) +
labs(x = 'Sub Grade') + scale_fill_discrete(name="Loan_Status") +theme_few()
# Further insights in loan status in relation to the sub_grade
options(repr.plot.width=6, repr.plot.height=4)
ggplot(dataset_to_analyze, aes(x = sub_grade, fill = loan_status)) + geom_bar(stat='count', position='fill', aes(color = I('black')), size = 0.1) +
labs(x = 'Sub Grade') + scale_fill_discrete(name="Loan_Status") +theme_few()
ggplot(dataset_to_analyze, aes(x= int_rate, fill = loan_status)) +
geom_histogram(bins = 10, position = "fill", aes(color = I('black')), size = 0.1)+
xlab("Interest Rate")+
ylab("Percent of default Vs No default")+theme_few()
ggplot(dataset
ggplot(dataset_to_analyze, aes(x = sub_grade, fill = int_rate)) + geom_bar(stat='count', position='fill', aes(color = I('black')), size = 0.1) +
labs(x = 'Sub Grade') + scale_fill_discrete(name="Loan_Status") + theme_few()
# Insights in Loan status in relation to the interest rate
ggplot(dataset_to_analyze, aes(x= int_rate, fill = loan_status)) +
geom_histogram(bins = 10, position = "fill", aes(color = I('black')), size = 0.1)+
xlab("Interest Rate")+
ylab("Percent of default Vs No default")+theme_few()
ggplot(dataset_to_analyze, aes(x = loan_status, y = int_rate, fill = sub_grade)) + geom_boxplot()
ggplot(dataset_to_analyze, aes(x = sub_grade, y = int_rate, fill = sub_grade)) + geom_boxplot()
# Insights in Loan status in relation to the interest rate
ggplot(dataset_to_analyze, aes(x= int_rate, fill = sub_grade)) +
geom_histogram(bins = 10, position = "fill", aes(color = I('black')), size = 0.1)+
xlab("Interest Rate")+
ylab("Sub Grade")+theme_few()
ggplot(dataset_to_analyze, aes(x = sub_grade, y = int_rate, fill = sub_grade)) + geom_boxplot()
ggplot(dataset_to_analyze, aes(x= int_rate, fill = sub_grade)) +
geom_histogram(bins = 10, position = "fill", aes(color = I('black')), size = 0.1)+
xlab("Interest Rate")+
ylab("Sub Grade")+theme_few()
ggplot(dataset_to_analyze, aes(x = sub_grade, y = int_rate, fill = sub_grade)) + geom_boxplot()
ggplot(dataset_to_analyze, aes(x = sub_grade, y = int_rate, fill = sub_grade)) + geom_boxplot()
#iv. Number of inquiries made in last 6 months and Loan Status
ggplot(dataset_to_analyze, aes(x= factor(inq_last_6mths), fill = factor(loan_status))) +
geom_bar(position = "fill", aes(color = I('black')), size = 0.1)+
xlab("Inquiry in Last 6 months")+
ylab("Percent of default Vs No default")+theme_few()
ggplot(dataset_to_analyze, aes(x = loan_status, y = inq_last_6mths, fill = loan_status)) + geom_boxplot()
#iv. Number of inquiries made in last 6 months and Loan Status
ggplot(dataset_to_analyze, aes(x= factor(inq_last_6mths), fill = factor(loan_status))) +
geom_bar(position = "fill", aes(color = I('black')), size = 0.1)+
xlab("Inquiry in Last 6 months")+
ylab("Percent of default Vs No default")+theme_few()
ggplot(dataset_to_analyze, aes(x = loan_status, y = inq_last_6mths, fill = loan_status)) + geom_boxplot()
#iii. Debt to Income(dti) and Loan Status
ggplot(dataset_to_analyze, aes(x= dti, fill = loan_status)) + geom_density()+
theme_few()
# Insights in the relation of the Loan purpose and the effect on the loan status
dataset_to_analyze %>% group_by(purpose) %>% summarise(default.pct = (1-sum(binary_status)/n())) %>%
ggplot(aes(x = reorder(purpose, default.pct), y = default.pct)) +
geom_bar(stat = "identity", fill =  "coral", aes(color = I('black')), size = 0.1)+coord_flip()+xlab("Purpose") + ylab("default percent")+
theme_few()
# Further insights in loan status in relation to the loan amount
options(repr.plot.width=6, repr.plot.height=4)
ggplot(dataset_to_analyze, aes(x= loan_amnt)) + geom_density(aes(fill = as.factor(loan_status))) + xlab("Loan_amount")+theme_few()
#i. Term and Loan Status
ggplot(dataset_to_analyze, aes(x =term, fill = loan_status)) + geom_bar(stat='count', position='fill', aes(color = I('black')), size = 0.1) +
labs(x = 'Term') +
ylab("Percent of default Vs No default") +theme_few()
dataset_to_analyze %>% group_by(term) %>% dplyr::summarise(count=n()) %>% mutate(pct=count/sum(count))%>%
ggplot(aes(x= term, y = pct)) + geom_bar(stat = "identity", fill = "purple", aes(color = I('black')), size = 0.1)+xlab("Term") +
ylab("Percent")
dataset_to_analyze %>% group_by(term) %>% dplyr::summarise(count=n()) %>% mutate(pct=count/sum(count))%>%
ggplot(aes(x= term, y = pct)) + geom_bar(stat = "identity", fill = "purple", aes(color = I('black')), size = 0.1)+xlab("Term") +
ylab("Percent")+ theme_few()
# Analysing the distribution of Continous variables
dataset_to_analyze %>% keep(is.numeric) %>% gather() %>%  ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_histogram(bins=20, color= "black", fill= "#3399FF")
#iii. Debt to Income(dti) and Loan Status
ggplot(dataset_to_analyze, aes(x= dti, fill = loan_status)) + geom_density()+
theme_few()
#iv. Number of inquiries made in last 6 months and Loan Status
ggplot(dataset_to_analyze, aes(x= factor(inq_last_6mths), fill = factor(loan_status))) +
geom_bar(position = "fill", aes(color = I('black')), size = 0.1)+
xlab("Inquiry in Last 6 months")+
ylab("Percent of default Vs No default")+theme_few()
ggplot(dataset_to_analyze, aes(x = loan_status, y = inq_last_6mths, fill = loan_status)) + geom_boxplot()
options(repr.plot.width=8, repr.plot.height=6)
corrplot(cor(dataset_to_analyze[,unlist(lapply(dataset_to_analyze, is.numeric))],
use = "complete.obs"), type = "lower", method = "number")
# Insights in the relation of the Loan purpose and the effect on the loan status
dataset_to_analyze %>% group_by(purpose) %>% summarise(default.pct = (1-sum(binary_status)/n())) %>%
ggplot(aes(x = reorder(purpose, default.pct), y = default.pct)) +
geom_bar(stat = "identity", fill =  "coral", aes(color = I('black')), size = 0.1)+coord_flip()+xlab("Purpose") + ylab("default percent")+
theme_few()
#iii. Debt to Income(dti) and Loan Status
ggplot(dataset_to_analyze, aes(x= dti, fill = loan_status)) + geom_density()+
theme_few()
#iii. Debt to Income(dti) and Loan Status
ggplot(dataset_to_analyze, aes(x= int_rate, fill = loan_status)) + geom_density()+
theme_few()
#iii. Debt to Income(dti) and Loan Status
ggplot(dataset_to_analyze, aes(x= int_rate, fill = dti)) + geom_density()+
theme_few()
#iii. Debt to Income(dti) and Loan Status
ggplot(dataset_to_analyze, aes(x= int_rate, fill = dti)) +
theme_few()
#iii. Debt to Income(dti) and Loan Status
ggplot(dataset_to_analyze, aes(x= int_rate, fill = dti)) +   geom_density()+
theme_few()
# General analysis of all continuos variables left in the data set with a correlation analysis
dataset_to_analyze %>% keep(is.numeric) %>% gather() %>%  ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_histogram(bins=20, color= "black", fill= "#3399FF")
#iii. Debt to Income(dti) and Loan Status
ggplot(dataset_to_analyze, aes(x= int_rate, y = dti)) +   geom_density()+   theme_few()
#iii. Debt to Income(dti) and Loan Status
ggplot(dataset_to_analyze, aes(x= int_rate, y = dti)) +   theme_few()
#iii. Debt to Income(dti) and Loan Status
ggplot(dataset_to_analyze, x= int_rate, y = dti) + theme_few()
#iii. Debt to Income(dti) and Loan Status
ggplot(dataset_to_analyze, x= int_rate, y = dti)
#iii. Debt to Income(dti) and Loan Status
plot(dataset_to_analyze, x= int_rate, y = dti)
#iii. Debt to Income(dti) and Loan Status
plot(data=dataset_to_analyze, x= int_rate, y = dti)
#iii. Debt to Income(dti) and Loan Status
plot(dataset_to_analyze$int_rate~dataset_to_analyze$dti)
hist(dataset_to_analyze$int_rate~dataset_to_analyze$dti)
hist(dataset_to_analyze$int_rate)
hist(dataset_to_analyze$int_rate) + hist(dataset_to_analyze$dti)
hist(dataset_to_analyze$int_rate),hist(dataset_to_analyze$dti)
#iii. Debt to Income(dti) and Loan Status
plot(dataset_to_analyze$int_rate~dataset_to_analyze$dti)
#iii. Debt to Income(dti) and Loan Status
plot(dataset_to_analyze$int_rate~dataset_to_analyze$dti, typeof(l))
#iii. Debt to Income(dti) and Loan Status
plot(dataset_to_analyze$int_rate~dataset_to_analyze$dti, typeof("l"))
#v. Verification Status and Loan Status
ggplot(dataset_to_analyze, aes(x =verification_status, fill = loan_status)) +
geom_bar(stat='count', position='fill', aes(color = I('black')), size = 0.1) +labs(x = 'Verification_status',
y="Percent of default Vs No default") +  theme_few()
#iv. Home Ownership and Loan Status
ggplot(dataset_to_analyze, aes(x =home_ownership, fill = loan_status)) +
geom_bar(stat='count', position='fill', aes(color = I('black')), size = 0.1) +labs(x = 'home_ownership') +
scale_fill_discrete(name="Loan_Status") +theme_few()
#vii. State
dataset_to_analyze %>% group_by(addr_state) %>% dplyr::summarise(count=n()) %>% mutate(pct=count/sum(count))%>%
ggplot(aes(x = reorder(addr_state, pct), y = pct)) + geom_bar(stat = "identity", fill = "lightblue2", aes(color = I('black')), size = 0.1) +
xlab("State Wise Loan") + ylab("Percent")+ coord_flip()+theme_few()
#iii. Employment Length
dataset_to_analyze %>% group_by(emp_length) %>% dplyr::summarise(count=n()) %>% mutate(pct=count/sum(count))%>%
ggplot(aes(x = reorder(emp_length, pct), y = pct)) + geom_bar(stat = "identity", fill = "purple", aes(color = I('black')), size = 0.1) +
xlab("Length of employment") + ylab("Percent")+coord_flip()+ theme_few()
#vi. Purpose
dataset_to_analyze %>% group_by(purpose) %>% dplyr::summarise(count=n()) %>% mutate(pct=count/sum(count))%>%
ggplot(aes(x = reorder(purpose, pct), y = pct)) + geom_bar(stat = "identity", fill = "purple", aes(color = I('black')), size = 0.1) +
xlab("Purpose of Loan") + ylab("Percent")+ coord_flip()+theme_few()
ggplot(dataset_to_analyze.loan.distribution,
aes(x=reorder(loan_status, pct),
y=pct, colour=loan_status, fill=loan_status)) +
geom_bar(stat="identity",
aes(color = I('black')),
size = 0.1) + coord_flip() + theme(legend.position = "none")+ xlab("Loan status") + ylab("Percentage in the dataset in the loan status")
# Insights in Loan status in relation to the interest rate
ggplot(dataset_to_analyze, aes(x= int_rate, fill = loan_status)) +
geom_histogram(bins = 10, position = "fill", aes(color = I('black')), size = 0.1)+
xlab("Interest Rate")+
ylab("Percent of default Vs No default")+theme_few()
dataset_to_analyze %>% group_by(term) %>% dplyr::summarise(count=n()) %>% mutate(pct=count/sum(count))%>%
ggplot(aes(x= term, y = pct)) + geom_bar(stat = "identity", fill = "purple", aes(color = I('black')), size = 0.1)+xlab("Term") +
ylab("Percent")+ theme_few()
ggplot(dataset_to_analyze.loan.sub_grade,
aes(x=reorder(sub_grade, pct),
y=pct, colour=sub_grade, fill=sub_grade)) +
geom_bar(stat="identity",
aes(color = I('black')),
size = 0.1) + coord_flip() + theme(legend.position = "none")+ xlab("Loan status") + ylab("Percentage in the dataset in the loan status")
ggplot(dataset_to_analyze, aes(x = loan_status, y = inq_last_6mths, fill = loan_status)) + geom_boxplot()
#iv. Number of inquiries made in last 6 months and Loan Status
ggplot(dataset_to_analyze, aes(x= factor(inq_last_6mths), fill = factor(loan_status))) +
geom_bar(position = "fill", aes(color = I('black')), size = 0.1)+
xlab("Inquiry in Last 6 months")+
ylab("Percent of default Vs No default")+theme_few()
ggplot(dataset_to_analyze, aes(x = loan_status, y = inq_last_6mths, fill = loan_status)) + geom_boxplot()
ggplot(dataset_to_analyze, aes(x = loan_status, y = inq_last_6mths, fill = loan_status)) + geom_boxplot()
# Effect of the number of inquiriees made in the last 6 months in relation to the loan status
ggplot(dataset_to_analyze, aes(x= factor(inq_last_6mths), fill = factor(loan_status))) +
geom_bar(position = "fill", aes(color = I('black')), size = 0.1)+
xlab("Inquiry in Last 6 months")+
ylab("Percent of default Vs No default")+theme_few()
ggplot(dataset_to_analyze, aes(x = loan_status, y = inq_last_6mths, fill = loan_status)) + geom_boxplot()
#iii. Debt to Income(dti) and Loan Status
plot(dataset_to_analyze$int_rate~dataset_to_analyze$dti, typeof("l"))
#iii. Debt to Income(dti) and Loan Status
plot(dataset_to_analyze$int_rate~dataset_to_analyze$dti, "l")
#iii. Debt to Income(dti) and Loan Status
plot(dataset_to_analyze$int_rate,dataset_to_analyze$dti, "l")
#iii. Debt to Income(dti) and Loan Status
boxplot(dataset_to_analyze$int_rate,dataset_to_analyze$dti, "l")
#iii. Debt to Income(dti) and Loan Status
boxplot(dataset_to_analyze$int_rate,dataset_to_analyze$dti)
#iii. Debt to Income(dti) and Loan Status
boxplot(dataset_to_analyze$int_rate~dataset_to_analyze$dti)
#iii. Debt to Income(dti) and Loan Status
boxplot(median(dataset_to_analyze$int_rate)~dataset_to_analyze$dti)
#iii. Debt to Income(dti) and Loan Status
boxplot(median(dataset_to_analyze$int_rate)~dataset_to_analyze$dti)
#iii. Debt to Income(dti) and Loan Status
boxplot(mean(dataset_to_analyze$int_rate)~dataset_to_analyze$dti)
#iii. Debt to Income(dti) and Loan Status
boxplot(mean(dataset_to_analyze$int_rate)~mean(dataset_to_analyze$dti))
#iii. Debt to Income(dti) and Loan Status
boxplot(dataset_to_analyze$int_rate~dataset_to_analyze$dti)
#iv. Home Ownership and Loan Status
ggplot(dataset_to_analyze, aes(x =home_ownership, fill = loan_status)) +
geom_bar(stat='count', position='fill', aes(color = I('black')), size = 0.1) +labs(x = 'home_ownership') +
scale_fill_discrete(name="Loan_Status") +theme_few()
#v. Verification Status and Loan Status
ggplot(dataset_to_analyze, aes(x =verification_status, fill = loan_status)) +
geom_bar(stat='count', position='fill', aes(color = I('black')), size = 0.1) +labs(x = 'Verification_status',
y="Percent of default Vs No default") +  theme_few()
#v. Verification Status and Loan Status
ggplot(dataset_to_analyze, aes(x =verification_status, fill = loan_status)) +
geom_bar(stat='count', position='fill', aes(color = I('black')), size = 0.01) +
labs(x = 'Verification_status', y="Percent of default Vs No default") +  theme_few()
#v. Verification Status and Loan Status
ggplot(dataset_to_analyze, aes(x =verification_status, fill = loan_status)) +
geom_bar(stat='count', position='fill', aes(color = I('black')), size = 0.5) +
labs(x = 'Verification_status', y="Percent of default Vs No default") +  theme_few()
#v. Verification Status and Loan Status
ggplot(dataset_to_analyze, aes(x =verification_status, fill = loan_status)) +
geom_bar(stat='count', position='fill', aes(color = I('black')), size = 0.1) +
labs(x = 'Verification_status', y="Percent of default Vs No default") +  theme_few()
#v. Verification Status and Loan Status
ggplot(dataset_to_analyze, aes(x =verification_status, fill = loan_status)) +
geom_bar(stat='count', position='fill', aes(color = I('black')), size = 0.45) +
labs(x = 'Verification_status', y="Percent of default Vs No default") +  theme_few()
#v. Verification Status and Loan Status
ggplot(dataset_to_analyze, aes(x =verification_status, fill = loan_status)) +
geom_bar(stat='count', position='fill', aes(color = I('black')), size = 4) +
labs(x = 'Verification_status', y="Percent of default Vs No default") +  theme_few()
#iii. Employee length and Loan Status
ggplot(filter(dataset_to_analyze, emp_length != 'n/a'), aes(x =emp_length, fill = loan_status)) +
geom_bar(stat='count', position='fill', aes(color = I('black')), size = 0.1) +labs(x = 'emp_length') +
scale_fill_discrete(name="Loan_Status") +
theme(axis.text.x = element_text(angle = 45, vjust = 0.8, hjust=1))
# Insights in Loan status in relation to the interest rate regardless of the loan status
ggplot(dataset_to_analyze, aes(x = sub_grade, y = int_rate, fill = sub_grade)) + geom_boxplot()
# Impact analysis of the loan status considering the employment length
ggplot(filter(dataset_to_analyze, emp_length != 'n/a'), aes(x =emp_length, fill = loan_status)) +
geom_bar(stat='count', position='fill', aes(color = I('black')), size = 0.1) +labs(x = 'emp_length') +
scale_fill_discrete(name="Loan_Status") +
theme(axis.text.x = element_text(angle = 45, vjust = 0.8, hjust=1))
# Impact analysis of the loan status considering the employment length
ggplot(aes(x =dataset_to_analyze$int_rate, fill = dataset_to_analyze$emp_length)) +
geom_bar(stat='count', position='fill', aes(color = I('black')), size = 0.1) +labs(x = 'emp_length') +
scale_fill_discrete(name="int_rate") +
theme(axis.text.x = element_text(angle = 45, vjust = 0.8, hjust=1))
# Impact analysis of the loan status considering the employment length
ggplot(dataset_to_analyze,aes(x =dataset_to_analyze$int_rate, fill = dataset_to_analyze$emp_length)) +
geom_bar(stat='count', position='fill', aes(color = I('black')), size = 0.1) +labs(x = 'emp_length') +
scale_fill_discrete(name="int_rate") +
theme(axis.text.x = element_text(angle = 45, vjust = 0.8, hjust=1))
# Impact analysis of the loan status considering the employment length
ggplot(dataset_to_analyze,aes(x =dataset_to_analyze$int_rate, fill = dataset_to_analyze$emp_length)) +
geom_bar(stat='avg', position='fill', aes(color = I('black')), size = 0.1) +labs(x = 'emp_length') +
scale_fill_discrete(name="int_rate") +
theme(axis.text.x = element_text(angle = 45, vjust = 0.8, hjust=1))
# Impact analysis of the loan status considering the employment length
ggplot(dataset_to_analyze,aes(x =dataset_to_analyze$int_rate, fill = dataset_to_analyze$emp_length))
# Impact analysis of the loan status considering the employment length
ggplot(dataset_to_analyze,aes(x =dataset_to_analyze$int_rate, fill = dataset_to_analyze$emp_length)) +
geom_bar( position='fill', aes(color = I('black')), size = 0.1) +labs(x = 'emp_length') +
scale_fill_discrete(name="int_rate") +
theme(axis.text.x = element_text(angle = 45, vjust = 0.8, hjust=1))
# Impact analysis of the loan status considering the employment length
ggplot(dataset_to_analyze,aes(x =dataset_to_analyze$int_rate, fill = dataset_to_analyze$emp_length)) +
theme(axis.text.x = element_text(angle = 45, vjust = 0.8, hjust=1))
# Impact analysis of the loan status considering the employment length
ggplot(dataset_to_analyze,aes(x =dataset_to_analyze$int_rate, fill = dataset_to_analyze$emp_length))
#vii. State
dataset_to_analyze %>% group_by(addr_state) %>% dplyr::summarise(count=n()) %>% mutate(pct=count/sum(count))%>%
ggplot(aes(x = reorder(addr_state, pct), y = pct)) + geom_bar(stat = "identity", fill = "lightblue2", aes(color = I('black')), size = 0.1) +
xlab("State Wise Loan") + ylab("Percent")+ coord_flip()+theme_few()
dataset_to_analyze %>% group_by(addr_state) %>% dplyr::summarise(count=n()) %>% mutate(pct=count/sum(count))%>%
ggplot(aes(x = reorder(addr_state, pct), y = pct)) + geom_bar(stat = "identity", fill = "lightblue2", aes(color = I('black')), size = 0.1) +
xlab("State Wise Loan") + ylab("Percent")+ coord_flip()+theme_few()
dataset_to_analyze %>% group_by(addr_state) %>% dplyr::summarise(count=n()) %>% mutate(pct=count/sum(count))%>%
ggplot(aes(x = reorder(addr_state, pct), y = pct)) + geom_bar(stat = "identity", fill = "lightblue2", aes(color = I('black')), size = 0.1) +
xlab("States where the loans were issued") + ylab("Relative number of loans in the dataset ")+ coord_flip()+theme_few()
#vi. Purpose
dataset_to_analyze %>% group_by(purpose) %>% dplyr::summarise(count=n()) %>% mutate(pct=count/sum(count))%>%
ggplot(aes(x = reorder(purpose, pct), y = pct)) + geom_bar(stat = "identity", fill = "purple", aes(color = I('black')), size = 0.1) +
xlab("Purpose of Loan") + ylab("Percent")+ coord_flip()+theme_few()
# Impact analysis of the loan status considering the employment length
ggplot(dataset_to_analyze,aes(x =int_rate, fill emp_length))
#iii. Employment Length
dataset_to_analyze %>% group_by(emp_length) %>% dplyr::summarise(count=n()) %>% mutate(pct=count/sum(count))%>%
ggplot(aes(x = reorder(emp_length, pct), y = pct)) + geom_bar(stat = "identity", fill = "purple", aes(color = I('black')), size = 0.1) +
xlab("Length of employment") + ylab("Percent")+coord_flip()+ theme_few()
# Impact analysis of the loan status considering the employment length
ggplot(dataset_to_analyze,aes(x =int_rate, y= emp_length))
# Impact analysis of the loan status considering the employment length
ggplot(dataset_to_analyze,aes(int_rate~emp_length))
# Impact analysis of the loan status considering the employment length
plot(dataset_to_analyze,int_rate~emp_length))
# Impact analysis of the loan status considering the employment length
plot(dataset_to_analyze,int_rate~emp_length)
plot.new()
abline(x=1.5)
abline(1.5)
abline(a = 1.5)
dataset_to_analyze %>% group_by(addr_state) %>% dplyr::summarise(count=n()) %>% mutate(pct=count/sum(count))%>%
ggplot(aes(x = reorder(addr_state, pct), y = pct)) + geom_bar(stat = "identity", fill = "lightblue2", aes(color = I('black')), size = 0.1) +
xlab("States where the loans were issued") + ylab("Relative number of loans in the dataset ")+ coord_flip()+theme_few()
linear_fit <- lm(data = dataset_to_analyze, formula = .)
linear_fit <- lm(data = dataset_to_analyze, formula = ~.)
linear_fit <- lm(data = dataset_to_analyze, formula = int_rate~.)
summary(linear_fit)
#vi. Purpose
dataset_to_analyze %>% group_by(purpose) %>% dplyr::summarise(count=n()) %>% mutate(pct=count/sum(count))%>%
ggplot(aes(x = reorder(purpose, pct), y = pct)) + geom_bar(stat = "identity", fill = "purple", aes(color = I('black')), size = 0.1) +
xlab("Purpose of Loan") + ylab("Percent")+ coord_flip()+theme_few()
# Effect of the number of inquiriees made in the last 6 months to the loan status
ggplot(dataset_to_analyze, aes(x= factor(inq_last_6mths), fill = factor(loan_status))) +
geom_bar(position = "fill", aes(color = I('black')), size = 0.1)+
xlab("Inquiry in Last 6 months")+
ylab("Percent of default Vs No default")+theme_few()
ggplot(dataset_to_analyze, aes(x = loan_status, y = inq_last_6mths, fill = loan_status)) + geom_boxplot()
#vi. Purpose
dataset_to_analyze %>% group_by(purpose) %>% dplyr::summarise(count=n()) %>% mutate(pct=count/sum(count))%>%
ggplot(aes(x = reorder(purpose, pct), y = pct)) + geom_bar(stat = "identity", fill = "purple", aes(color = I('black')), size = 0.1) +
xlab("Purpose of Loan") + ylab("Percent")+ coord_flip()+theme_few()
plot(dataset_to_analyze$purpose~dataset_to_analyze$int_rate)
plot(dataset_to_analyze$purpose~dataset_to_analyze$int_rate)
plot(dataset_to_analyze$int_rate~dataset_to_analyze$purpose)
plot(dataset_to_analyze$int_rate~dataset_to_analyze$home_ownership)
# Impact analysis of the loan status considering the employment length
plot(dataset_to_analyze$int_rate~dataset_to_analyze$emp_length)
######
##
## sample the set for further analysis on smaller data set and store this in a file as well
##
######
set.seed(666)
df_sample <- sample_n(df_loan_cleaned,10000)
# --> most of the loans are applied in California, followed by Texas and New York
plot(dataset_to_analyze$int_rate~dataset_to_analyze$addr_state)
summary(linear_fit)
linear_fit.II <- lm(data = dataset_to_analyze, formula = int_rate~sub_grade+home_ownership)
summary(linear_fit.II)
summary(linear_fit)
